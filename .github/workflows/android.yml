name: build-apk

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    env:
      SYS_SDK: /usr/local/lib/android/sdk
      BZ_SDK: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system deps
        run: |
          sudo apt update
          sudo apt install -y \
            openjdk-17-jdk zip unzip libffi-dev libssl-dev libltdl-dev \
            autoconf automake libtool pkg-config build-essential ccache

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install buildozer cython==0.29.36

      - name: Add Android tools to PATH
        run: |
          echo "${SYS_SDK}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${SYS_SDK}/platform-tools" >> $GITHUB_PATH

      - name: Prepare dedicated SDK for Buildozer (pin 34.0.0)
        run: |
          set -e
          mkdir -p "${BZ_SDK}"
          # 在 Buildozer 专用 SDK 根内安装稳定包
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${BZ_SDK}" --licenses || true
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${BZ_SDK}" \
            "cmdline-tools;latest" "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          # 把专用 SDK 的工具放入 PATH（aapt/aidl 等）
          echo "${BZ_SDK}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${BZ_SDK}/platform-tools" >> $GITHUB_PATH
          echo "${BZ_SDK}/build-tools/34.0.0" >> $GITHUB_PATH
          # 暴露给后续步骤与 p4a
          {
            echo "ANDROID_SDK_ROOT=${BZ_SDK}"
            echo "ANDROID_HOME=${BZ_SDK}"
            echo "ANDROIDSDK=${BZ_SDK}"
          } >> $GITHUB_ENV

      - name: Prepare buildozer.spec
        run: |
          # 去 BOM
          sed -i '1s/^\xEF\xBB\xBF//' buildozer.spec || true
          # 确保 version
          if ! grep -Eq '^[[:space:]]*version[[:space:]]*=' buildozer.spec; then
            sed -i '0,/^\[app\]$/!b;//a version = 0.1.0' buildozer.spec
          fi
          # 强制 API 与 Build-Tools 版本
          if grep -Eq '^[[:space:]]*android\.api[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.api[[:space:]]*=.*/android.api = 34/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.api = 34' buildozer.spec
          fi
          if grep -Eq '^[[:space:]]*android\.build_tools_version[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.build_tools_version[[:space:]]*=.*/android.build_tools_version = 34.0.0/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.build_tools_version = 34.0.0' buildozer.spec
          fi
          # 接受许可与指定 SDK 路径
          if grep -Eq '^[[:space:]]*android\.accept_sdk_license[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.accept_sdk_license[[:space:]]*=.*/android.accept_sdk_license = True/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.accept_sdk_license = True' buildozer.spec
          fi
          if grep -Eq '^[[:space:]]*android\.sdk_path[[:space:]]*=' buildozer.spec; then
            sed -i "s|^[[:space:]]*android\.sdk_path[[:space:]]*=.*|android.sdk_path = ${BZ_SDK}|" buildozer.spec
          else
            sed -i "0,/^\[android\]$/!b;//a android.sdk_path = ${BZ_SDK}" buildozer.spec
          fi
          echo "===== buildozer.spec ====="
          cat buildozer.spec

      - name: Build debug APK
        run: |
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
          if-no-files-found: error
