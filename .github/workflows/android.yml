name: build-apk

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system deps
        run: |
          sudo apt update
          sudo apt install -y \
            openjdk-17-jdk zip unzip libffi-dev libssl-dev libltdl-dev \
            autoconf automake libtool pkg-config build-essential ccache

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install buildozer cython==0.29.36

      - name: Define SDK paths via GITHUB_ENV
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "SYS_SDK=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROIDSDK=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_BUILD_TOOLS_VERSION=34.0.0" >> $GITHUB_ENV

      - name: Add Android tools to PATH
        run: |
          echo "/usr/local/lib/android/sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH

      - name: Install stable Android SDK into Buildozer SDK root
        run: |
          set -e
          mkdir -p "$ANDROID_SDK_ROOT"
          # 接受系统 SDK 许可（确保 sdkmanager 不交互）
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
          # 把稳定版本安装到 Buildozer 的 SDK 根（--sdk_root）
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "cmdline-tools;latest"
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools"
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platforms;android-34"
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "build-tools;34.0.0"
          # 将 Buildozer 自带 SDK 的工具加入 PATH（aapt/aidl）
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/34.0.0" >> $GITHUB_PATH
          ls -la "$ANDROID_SDK_ROOT/build-tools" || true

      - name: Prepare buildozer.spec (lock versions and sdk_path)
        run: |
          # 去除 UTF-8 BOM
          sed -i '1s/^\xEF\xBB\xBF//' buildozer.spec || true
          # 确保 version
          if ! grep -Eq '^[[:space:]]*version[[:space:]]*=' buildozer.spec; then
            sed -i '0,/^\[app\]$/!b;//a version = 0.1.0' buildozer.spec
          fi
          # 强制 API 34
          if grep -Eq '^[[:space:]]*android\.api[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.api[[:space:]]*=.*/android.api = 34/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.api = 34' buildozer.spec
          fi
          # 强制 Build-Tools 34.0.0
          if grep -Eq '^[[:space:]]*android\.build_tools_version[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.build_tools_version[[:space:]]*=.*/android.build_tools_version = 34.0.0/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.build_tools_version = 34.0.0' buildozer.spec
          fi
          # 接受许可
          if grep -Eq '^[[:space:]]*android\.accept_sdk_license[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.accept_sdk_license[[:space:]]*=.*/android.accept_sdk_license = True/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.accept_sdk_license = True' buildozer.spec
          fi
          # 指定 sdk_path 为 Buildozer SDK 根
          if grep -Eq '^[[:space:]]*android\.sdk_path[[:space:]]*=' buildozer.spec; then
            sed -i "s|^[[:space:]]*android\.sdk_path[[:space:]]*=.*|android.sdk_path = $ANDROID_SDK_ROOT|" buildozer.spec
          else
            sed -i "0,/^\[android\]$/!b;//a android.sdk_path = $ANDROID_SDK_ROOT" buildozer.spec
          fi
          echo "===== buildozer.spec ====="
          cat buildozer.spec
      - name: Create legacy sdkmanager path shim
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/tools/bin"
          ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_SDK_ROOT/tools/bin/sdkmanager"
          ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager" "$ANDROID_SDK_ROOT/tools/bin/avdmanager" || true
          # 验证
          "$ANDROID_SDK_ROOT/tools/bin/sdkmanager" --version
      - name: Build debug APK
        run: |
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
          if-no-files-found: error
