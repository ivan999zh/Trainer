name: build-apk

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    env:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      BZ_HOME: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
      ANDROID_SDK_ROOT: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
      ANDROID_HOME: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
      ANDROIDSDK: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
      ANDROID_BUILD_TOOLS_VERSION: 34.0.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system deps
        run: |
          sudo apt update
          sudo apt install -y \
            openjdk-17-jdk zip unzip libffi-dev libssl-dev libltdl-dev \
            autoconf automake libtool pkg-config build-essential ccache

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install buildozer cython==0.29.36

      - name: Prepare Android SDK for Buildozer (pin 34.0.0)
        env:
          SYS_SDK: /usr/local/lib/android/sdk
        run: |
          set -e
          mkdir -p "${ANDROID_SDK_ROOT}"
          # 确保 sdkmanager 可用
          echo "${SYS_SDK}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${SYS_SDK}/platform-tools" >> $GITHUB_PATH

          # 在 Buildozer 专用目录安装稳定版本（用系统 sdkmanager 指定 --sdk_root）
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" --licenses || true
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" "cmdline-tools;latest"
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools"
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" "platforms;android-34"
          yes | "${SYS_SDK}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" "build-tools;34.0.0"

          # 把专用 SDK 的工具加入 PATH（aapt/aidl）
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/build-tools/34.0.0" >> $GITHUB_PATH

          # 列出已安装，确认 34.0.0 在位
          ls -la "${ANDROID_SDK_ROOT}/build-tools" || true
          "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" --list | head -n 80 || true

      - name: Prepare buildozer.spec (lock versions and sdk_path)
        run: |
          sed -i '1s/^\xEF\xBB\xBF//' buildozer.spec || true
          # version
          if ! grep -Eq '^[[:space:]]*version[[:space:]]*=' buildozer.spec; then
            sed -i '0,/^\[app\]$/!b;//a version = 0.1.0' buildozer.spec
          fi
          # android.api
          if grep -Eq '^[[:space:]]*android\.api[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.api[[:space:]]*=.*/android.api = 34/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.api = 34' buildozer.spec
          fi
          # android.build_tools_version
          if grep -Eq '^[[:space:]]*android\.build_tools_version[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.build_tools_version[[:space:]]*=.*/android.build_tools_version = 34.0.0/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.build_tools_version = 34.0.0' buildozer.spec
          fi
          # android.accept_sdk_license
          if grep -Eq '^[[:space:]]*android\.accept_sdk_license[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.accept_sdk_license[[:space:]]*=.*/android.accept_sdk_license = True/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.accept_sdk_license = True' buildozer.spec
          fi
          # android.sdk_path 指向 $HOME 下的 Buildozer 目录（p4a 默认查这里）
          if grep -Eq '^[[:space:]]*android\.sdk_path[[:space:]]*=' buildozer.spec; then
            sed -i "s|^[[:space:]]*android\.sdk_path[[:space:]]*=.*|android.sdk_path = ${ANDROID_SDK_ROOT}|" buildozer.spec
          else
            sed -i "0,/^\[android\]$/!b;//a android.sdk_path = ${ANDROID_SDK_ROOT}" buildozer.spec
          fi
          echo "===== buildozer.spec ====="
          cat buildozer.spec

      - name: Build debug APK
        run: |
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
          if-no-files-found: error
