name: build-apk

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system deps
        run: |
          sudo apt update
          sudo apt install -y \
            openjdk-17-jdk zip unzip libffi-dev libssl-dev libltdl-dev \
            autoconf automake libtool pkg-config build-essential ccache

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install buildozer cython==0.29.36

      - name: Install Android SDK cmdline-tools and accept licenses
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT"
          curl -L -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076702_latest.zip || \
          curl -L -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          # 添加到 PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: Install required Android packages
        run: |
          yes | sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "patcher;v4"
          # 添加其余路径
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/34.0.0" >> $GITHUB_PATH
          sdkmanager --list | head -n 50

      - name: Prepare buildozer.spec
        run: |
          # 去除 UTF-8 BOM
          sed -i '1s/^\xEF\xBB\xBF//' buildozer.spec || true
          # 确保 version 存在
          if ! grep -Eq '^[[:space:]]*version[[:space:]]*=' buildozer.spec; then
            sed -i '0,/^\[app\]$/!b;//a version = 0.1.0' buildozer.spec
          fi
          # 强制使用稳定 API 34
          if grep -Eq '^[[:space:]]*android\.api[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.api[[:space:]]*=.*/android.api = 34/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.api = 34' buildozer.spec
          fi
          # 接受 SDK 许可证
          if grep -Eq '^[[:space:]]*android\.accept_sdk_license[[:space:]]*=' buildozer.spec; then
            sed -i 's/^[[:space:]]*android\.accept_sdk_license[[:space:]]*=.*/android.accept_sdk_license = True/' buildozer.spec
          else
            sed -i '0,/^\[android\]$/!b;//a android.accept_sdk_license = True' buildozer.spec
          fi
          echo "===== buildozer.spec ====="
          cat buildozer.spec

      - name: Build debug APK
        run: |
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
          if-no-files-found: error
